// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef GFPSDK_SWIFT_H
#define GFPSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <GFPSDK/GFPSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GFPSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;

SWIFT_CLASS("_TtC6GFPSDK20GFPAdProviderSetting")
@interface GFPAdProviderSetting : NSObject
@property (nonatomic, readonly) GFPAdProviderSettingType type;
@property (nonatomic, readonly) BOOL isTestMode;
+ (GFPAdProviderSetting * _Nonnull)type:(GFPAdProviderSettingType)type testMode:(BOOL)testMode SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPAlignmentCenter, open) {
  GFPAlignmentCenterVertical = 0,
  GFPAlignmentCenterHorizontal = 1,
};

/// GFP에서 지원하는 배너광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPBannerProviderOption, open) {
  GFPBannerProviderOptionNone = 0,
  GFPBannerProviderOptionNDA = 1,
  GFPBannerProviderOptionDFP = 2,
  GFPBannerProviderOptionInMobi = 3,
  GFPBannerProviderOptionFAN = 4,
  GFPBannerProviderOptionUnity = 5,
  GFPBannerProviderOptionAppLovin = 6,
};


SWIFT_CLASS("_TtC6GFPSDK9GFPBundle")
@interface GFPBundle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPBundle * _Nonnull sharedInstance;)
+ (GFPBundle * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull appVersion;)
+ (NSString * _Nonnull)appVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull appName;)
+ (NSString * _Nonnull)appName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull identifier;)
+ (NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)skAdNetworkList SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setup;
+ (NSString * _Nullable)sdkResourceWith:(NSString * _Nonnull)aPath type:(NSString * _Nonnull)aType SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, GFPCellularType, open) {
  GFPCellularTypeUnknown = 0,
  GFPCellularTypeG2 = 1,
  GFPCellularTypeG3 = 2,
  GFPCellularTypeG4 = 3,
  GFPCellularTypeG5 = 4,
};

/// GFP에서 지원하는 Combined (배너, 네이티브)광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPCombinedProviderOption, open) {
  GFPCombinedProviderOptionNone = 0,
  GFPCombinedProviderOptionDFP = 1,
};

@class GFPUADeviceInfo;
@class GFPServiceInfo;

SWIFT_CLASS("_TtC6GFPSDK13GFPDeviceInfo")
@interface GFPDeviceInfo : NSObject
@property (nonatomic, strong) GFPUADeviceInfo * _Nonnull uaInfo;
@property (nonatomic, strong) GFPServiceInfo * _Nonnull serviceInfo;
- (nonnull instancetype)init:(NSString * _Nonnull)version OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull dict;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull initializeDict;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK16GFPDeviceLocInfo")
@interface GFPDeviceLocInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull latitude;
@property (nonatomic, copy) NSString * _Nonnull longitude;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK14GFPDeviceUtils")
@interface GFPDeviceUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable preferredLanguageCode;)
+ (NSString * _Nullable)preferredLanguageCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable getDeviceCountryCode;)
+ (NSString * _Nullable)getDeviceCountryCode SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable localeIdentifier;)
+ (NSString * _Nullable)localeIdentifier SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isStatusBarLandscape;)
+ (BOOL)isStatusBarLandscape SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isIPad;)
+ (BOOL)isIPad SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull systemName;)
+ (NSString * _Nonnull)systemName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull systemVer;)
+ (NSString * _Nonnull)systemVer SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull deviceModel;)
+ (NSString * _Nonnull)deviceModel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGRect screenRect;)
+ (CGRect)screenRect SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat nativeScaleFactor;)
+ (CGFloat)nativeScaleFactor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isSKAdNetworkAvaliable;)
+ (BOOL)isSKAdNetworkAvaliable SWIFT_WARN_UNUSED_RESULT;
+ (GFPDeviceLocInfo * _Nullable)getLocationInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP6GFPSDK18GFPDictPresentable_")
@protocol GFPDictPresentable
- (NSDictionary<NSString *, NSString *> * _Nullable)dictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURL;

SWIFT_PROTOCOL("_TtP6GFPSDK22GFPEventReportDelegate_")
@protocol GFPEventReportDelegate <NSObject>
- (void)reportTrackingAckImp:(NSString * _Nonnull)aURL;
- (void)reportTrackingViewableImp:(NSURL * _Nonnull)aURL;
- (void)reportTrackingRenderedImp:(NSURL * _Nonnull)aURL;
- (void)reportTrackingAttachedImp:(NSURL * _Nonnull)aURL;
- (void)reportTrackingClickEvent:(NSURL * _Nonnull)aURL;
- (void)reportTrackingMuteEvent:(NSURL * _Nonnull)aURL;
- (void)reportTrackingLoadError:(NSString * _Nonnull)loadEventInfo;
- (void)reportTrackingStartError:(NSString * _Nonnull)startEventInfo;
@end

@class NSNumber;

SWIFT_PROTOCOL("_TtP6GFPSDK25GFPEventReportPresentable_")
@protocol GFPEventReportPresentable <NSObject>
@property (nonatomic, strong) NSNumber * _Nonnull adCallRequestTime;
@end

/// GFP에서 지원하는 Interstitial 광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPInterstitialAdProviderOption, open) {
  GFPInterstitialAdProviderOptionNone = 0,
  GFPInterstitialAdProviderOptionDFP = 1,
  GFPInterstitialAdProviderOptionFAN = 2,
  GFPInterstitialAdProviderOptionInMobi = 3,
  GFPInterstitialAdProviderOptionUnity = 4,
  GFPInterstitialAdProviderOptionAppLovin = 5,
};

@protocol GFPQueueObject;

SWIFT_CLASS("_TtC6GFPSDK13GFPLimitQueue")
@interface GFPLimitQueue : NSObject
@property (nonatomic, readonly, copy) NSArray<id <GFPQueueObject>> * _Nonnull queue;
@property (nonatomic, readonly) NSInteger size;
@property (nonatomic, readonly) BOOL isFull;
@property (nonatomic, readonly) BOOL isEmpty;
- (void)enqueue:(id <GFPQueueObject> _Nullable)queueObject;
- (void)enqueueAndReplace:(id <GFPQueueObject> _Nullable)queueObject;
- (id <GFPQueueObject> _Nullable)dequeue SWIFT_WARN_UNUSED_RESULT;
+ (GFPLimitQueue * _Nonnull)sizeWith:(NSInteger)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithSize:(NSInteger)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum GFPLogLevel : NSInteger;

SWIFT_CLASS_NAMED("GFPLog")
@interface GFPLog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPLog * _Nonnull sharedInstance;)
+ (GFPLog * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic) enum GFPLogLevel logLevel;
@property (nonatomic, readonly) BOOL hasLogLevel;
@property (nonatomic, readonly, copy) NSString * _Nonnull logLevelDesc;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull logIdentifier;)
+ (NSString * _Nonnull)logIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)logLevelDescWith:(enum GFPLogLevel)logLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)logMessage:(id _Nonnull)message method:(id _Nonnull)method logLevel:(enum GFPLogLevel)logLevel debugMode:(BOOL)debugMode;
@end


typedef SWIFT_ENUM(NSInteger, GFPLogLevel, open) {
  GFPLogLevelTrace = 0,
  GFPLogLevelDebug = 1,
  GFPLogLevelInfo = 2,
  GFPLogLevelError = 3,
  GFPLogLevelCritical = 4,
  GFPLogLevelNone = 5,
};


SWIFT_CLASS("_TtC6GFPSDK13GFPMergeUtils")
@interface GFPMergeUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (NSArray * _Nonnull)mergeWithArray1:(NSArray * _Nonnull)array1 array2:(NSArray * _Nonnull)array2 SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)mergeWithDict1:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)dict1 dict2:(NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)dict2 SWIFT_WARN_UNUSED_RESULT;
@end

/// GFP에서 지원하는 네이티브광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPNativeProviderOption, open) {
  GFPNativeProviderOptionNone = 0,
  GFPNativeProviderOptionNDA = 1,
  GFPNativeProviderOptionDFP = 2,
  GFPNativeProviderOptionFAN = 3,
  GFPNativeProviderOptionInMobi = 4,
  GFPNativeProviderOptionAppLovin = 5,
};

typedef SWIFT_ENUM(NSInteger, GFPNetworkType, open) {
  GFPNetworkTypeUnknown = 0,
  GFPNetworkTypeEthernet = 1,
  GFPNetworkTypeWifi = 2,
  GFPNetworkTypeCellular = 3,
};


SWIFT_CLASS("_TtC6GFPSDK15GFPNetworkUtils")
@interface GFPNetworkUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPNetworkUtils * _Nonnull sharedInstance;)
+ (GFPNetworkUtils * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * _Nullable info;
@property (nonatomic, readonly) enum GFPNetworkType networkType;
@property (nonatomic, readonly) enum GFPCellularType cellularType;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isWIFI;)
+ (BOOL)isWIFI SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull networkTypeDescForInit;)
+ (NSString * _Nonnull)networkTypeDescForInit SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull networkTypeDescForAdcall;)
+ (NSString * _Nonnull)networkTypeDescForAdcall SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GFPOMContantsType, open) {
  GFPOMContantsTypeHTML = 0,
  GFPOMContantsTypeHTMLVideo = 1,
  GFPOMContantsTypeVideo = 2,
  GFPOMContantsTypeImage = 3,
  GFPOMContantsTypeAudio = 4,
};

typedef SWIFT_ENUM(NSInteger, GFPOriginType, open) {
  GFPOriginTypeX = 0,
  GFPOriginTypeY = 1,
};


SWIFT_PROTOCOL("_TtP6GFPSDK14GFPQueueObject_")
@protocol GFPQueueObject <NSObject>
@end


SWIFT_CLASS("_TtC6GFPSDK12GFPRectUtils")
@interface GFPRectUtils : NSObject
+ (BOOL)isContainsNaN:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// GFP에서 지원하는 Reward 광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPRewardedAdProviderOption, open) {
  GFPRewardedAdProviderOptionNone = 0,
  GFPRewardedAdProviderOptionDFP = 1,
  GFPRewardedAdProviderOptionFAN = 2,
  GFPRewardedAdProviderOptionInMobi = 3,
  GFPRewardedAdProviderOptionUnity = 4,
  GFPRewardedAdProviderOptionAppLovin = 5,
};


SWIFT_PROTOCOL("_TtP6GFPSDK21GFPS2SAdClickDelegate_")
@protocol GFPS2SAdClickDelegate <NSObject>
- (void)openURLWith:(NSString * _Nonnull)urlString landingHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(BOOL))landingHandler;
@end


SWIFT_CLASS("_TtC6GFPSDK11GFPSDKPhase")
@interface GFPSDKPhase : NSObject
+ (NSString * _Nonnull)sdkInitPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)skadnRegisterPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)waterfallPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)videoSchedulePhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)neloPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK14GFPServiceInfo")
@interface GFPServiceInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull appName;
@property (nonatomic, copy) NSString * _Nonnull appVersion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull dict;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull appVersionDict;
@end

typedef SWIFT_ENUM(NSInteger, GFPSizeType, open) {
  GFPSizeTypeHeight = 0,
  GFPSizeTypeWidth = 1,
};


SWIFT_CLASS("_TtC6GFPSDK12GFPSizeUtils")
@interface GFPSizeUtils : NSObject
+ (BOOL)isSquareWith:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)ratioWith:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isContainsNaN:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK14GFPStringUtils")
@interface GFPStringUtils : NSObject
+ (BOOL)isValidUDID:(NSString * _Nonnull)adID SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whiteSpaceTrimWith:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)whiteSpaceNewLineTrimWith:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasLengthWhiteSpaceTrimWith:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isEmptyWith:(NSString * _Nullable)aString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)encodeByAddingPercentEscapesWith:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, NSString *> * _Nullable)queryComponentsWith:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isValidTimeFormatString:(NSString * _Nonnull)timeString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isValidPercentFormatString:(NSString * _Nonnull)percentString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isValidTimeOrPercentFormatString:(NSString * _Nonnull)aString SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)filterJsonStringWith:(NSDictionary * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)jsonStringWith:(NSDictionary * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)filterHostMetaWith:(NSDictionary * _Nonnull)aDict SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasHttpPrefix:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)convertWith:(id _Nonnull)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UIImage;
@class UIView;

SWIFT_CLASS("_TtC6GFPSDK22GFPTextAdViewAttribute")
@interface GFPTextAdViewAttribute : NSObject
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable verticalBarColor;
@property (nonatomic, strong) UIImage * _Nullable closeIcon;
@property (nonatomic, strong) UIImage * _Nullable moreIcon;
@property (nonatomic, strong) UIView * _Nullable containerView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithContainer:(UIView * _Nullable)container OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK12GFPTimeUtils")
@interface GFPTimeUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSNumber * _Nonnull currentUptime;)
+ (NSNumber * _Nonnull)currentUptime SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)convertTimeFormatString:(NSString * _Nonnull)timeString SWIFT_WARN_UNUSED_RESULT;
+ (NSTimeInterval)convertTimeOrPercentFormatString:(NSString * _Nonnull)timeString withDurationTimeInterval:(NSTimeInterval)durationTimeInterval SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)secondFromTimeInterval:(NSTimeInterval)timeInterval SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6GFPSDK15GFPUADeviceInfo")
@interface GFPUADeviceInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull systemVersion;
@property (nonatomic, copy) NSString * _Nonnull deviceType;
- (nonnull instancetype)initWith:(NSString * _Nonnull)aSystemVersion deviceType:(NSString * _Nonnull)aDeviceType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK12GFPUserAgent")
@interface GFPUserAgent : NSObject
@property (nonatomic) BOOL useDefaultUA;
@property (nonatomic, copy) NSString * _Nullable updateUA;
@property (nonatomic, readonly, copy) NSString * _Nonnull wkwebViewUA;
- (nonnull instancetype)initWith:(GFPUADeviceInfo * _Nonnull)deviceInfo OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExternalUserAgent:(NSString * _Nonnull)externalUserAgent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <ul>
///   <li>
///     Schedule Load 이후 비디오 광고 요청에 필요한 별도 Param 생성.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC6GFPSDK15GFPVideoAdParam")
@interface GFPVideoAdParam : NSObject <NSCopying>
@property (nonatomic, readonly, copy) NSString * _Nonnull scheduleID;
@property (nonatomic, readonly, copy) NSString * _Nonnull requestID;
@property (nonatomic, readonly) float contentLength;
@property (nonatomic, readonly) NSInteger remindRequest;
@property (nonatomic) NSInteger startDelay;
@property (nonatomic) BOOL hasRemind;
- (nonnull instancetype)initWithScheduleID:(NSString * _Nonnull)aScheduleID requestID:(NSString * _Nonnull)requestID contentLength:(float)contentLength OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum GFPVideoBackgroundActionType : NSInteger;

SWIFT_CLASS("_TtC6GFPSDK23GFPVideoAdPlayerSetting")
@interface GFPVideoAdPlayerSetting : NSObject
/// 광고 재생 도중 Background 진입 시 동작 option 처리. (Default는 Pause)
@property (nonatomic) enum GFPVideoBackgroundActionType backAction;
/// 광고 재생 도중 Audio output 관련 동작 정리. (Optional, Default는 AVPlayer 기본 동작)
@property (nonatomic) GFPVideoAudioSettingType audioSetting;
- (nonnull instancetype)initWithAction:(enum GFPVideoBackgroundActionType)aAction audioSetting:(GFPVideoAudioSettingType)aType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithAction:(enum GFPVideoBackgroundActionType)aAction;
- (nonnull instancetype)initWithAudioSetting:(GFPVideoAudioSettingType)aType;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6GFPSDK26GFPVideoAdRenderingSetting")
@interface GFPVideoAdRenderingSetting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger GFPVideoAdRenderingSettingAutodetectBitrate;)
+ (NSInteger)GFPVideoAdRenderingSettingAutodetectBitrate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval GFPVideoAdRenderingSettingDefaultStartTimeout;)
+ (NSTimeInterval)GFPVideoAdRenderingSettingDefaultStartTimeout SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval GFPVideoAdRenderingSettingDefaultBufferingTimeout;)
+ (NSTimeInterval)GFPVideoAdRenderingSettingDefaultBufferingTimeout SWIFT_WARN_UNUSED_RESULT;
/// 광고영상의 최대 bitrate (kbit/sec)
/// 입력값 보다 낮은 bitrate 광고영상 중 가장 높은 bitrate 영샹이 채택되며,
/// 입력값 보다 낮은 bitrate 영상이 없는 경우 가장 가까운 bitrate 영샹이 재생됩니다.
/// 기본값(GFPVideoAdRenderingSettingAutodetectBitrate)인 경우, WIFI 사용중에는 최대, Cellular 환경에서는 최소 bitrate 영샹이 재생됩니다.
@property (nonatomic) NSInteger bitrateKbps;
/// 광고영상의 MIME type 목록
/// 기본값(=nil or Empty)은, AVPlayer 에서 지원하는 모든 타입이 허용됩니다.
/// 명시한 MIME type에 해당하는 영상 URL이 서버로부터 제공되지 않으면, 광고로드시 Error 가 송출됩니다.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimeTypes;
/// 광고 시작요청 이후 실제 시작 시점까지 타임아웃 (기본값은 -1 이며, 이 경우 타임아웃 5초가 적용 됩니다.)
@property (nonatomic) NSTimeInterval startTimeoutInterval;
/// 재생도중 버퍼링이 발생한 경우, 설정된 시간을 초과하면 타임아웃 에러가 발생합니다. (기본값은 -1 이며, 이 경우 타임아웃이 적용되지 않습니다.)
@property (nonatomic) NSTimeInterval bufferingTimeoutInterval;
/// 광고 UI 컴포넌트를 그릴 때 기준을 설정합니다. (기본값은 false)
/// false: GFPVideoAdScheduleManager.videoView 혹은 GFPVideoAdmanager.videoView 의 너비에 따라 컴포넌트를 그림.
/// true: 광고 영상의 실제 width 에 따라 컴포넌트를 그림.
@property (nonatomic) BOOL isPreferContentWidthUI;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GFPVideoBackgroundActionType, open) {
  GFPVideoBackgroundActionTypePlay = 0,
  GFPVideoBackgroundActionTypePause = 1,
};

enum GFPVideoDisplayType : NSInteger;

SWIFT_CLASS("_TtC6GFPSDK19GFPVideoDisplayMode")
@interface GFPVideoDisplayMode : NSObject
@property (nonatomic, readonly) enum GFPVideoDisplayType mode;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, weak) UIView * _Nullable customTopView;
@property (nonatomic, readonly) BOOL isCasting;
@property (nonatomic, readonly) BOOL isPIP;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
+ (GFPVideoDisplayMode * _Nonnull)normal SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)castingWith:(NSString * _Nullable)text SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)pip SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)pipWith:(UIView * _Nullable)customTopView SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

typedef SWIFT_ENUM(NSInteger, GFPVideoDisplayType, open) {
  GFPVideoDisplayTypeNormal = 0,
  GFPVideoDisplayTypeCasting = 1,
  GFPVideoDisplayTypePIP = 2,
};

/// GFP에서 지원하는 비디오광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPVideoProviderOption, open) {
  GFPVideoProviderOptionNone = 0,
  GFPVideoProviderOptionNDA = 1,
  GFPVideoProviderOptionIMA = 2,
};


SWIFT_CLASS("_TtC6GFPSDK12GFPViewUtils")
@interface GFPViewUtils : NSObject
+ (void)removeSubviews:(UIView * _Nonnull)aView;
+ (CGRect)originalFrame:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isVisibility:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isViewableOnScreen:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isAtLeastHalfViewable:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (CGFloat)exposedPercentage:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (CGRect)visibleRectangle:(UIView * _Nonnull)aView SWIFT_WARN_UNUSED_RESULT;
+ (void)fillSuperviewWithCenterAlignment:(UIView * _Nonnull)aView;
+ (void)setConstraintWithFrameSize:(UIView * _Nonnull)aView;
+ (void)setConstraintWithSize:(CGSize)size view:(UIView * _Nonnull)view;
+ (void)matchSuperViewSize:(UIView * _Nonnull)aView;
+ (void)matchSuperViewSafetyAreaThroughConstraints:(UIView * _Nonnull)aView;
+ (void)arrangeToSuperviewWithXAttribute:(enum NSLayoutAttribute)xAttribute yAttribute:(enum NSLayoutAttribute)yAttribute view:(UIView * _Nonnull)view;
+ (void)arrangeToSuperviewWithXAttribute:(enum NSLayoutAttribute)xAttribute yAttribute:(enum NSLayoutAttribute)yAttribute offsetX:(CGFloat)offsetX offsetY:(CGFloat)offsetY view:(UIView * _Nonnull)view;
+ (void)arrangeToSuperViewApplyingSafeAreaWithXAttribute:(enum NSLayoutAttribute)xAttribute yAttribute:(enum NSLayoutAttribute)yAttribute offsetX:(CGFloat)offsetX offsetY:(CGFloat)offsetY view:(UIView * _Nonnull)view;
+ (void)removeSizeConstraintOnSuperview:(UIView * _Nonnull)aView;
+ (void)removeSizeConstraintOnSuperviewLayoutGuide:(UIView * _Nonnull)aView;
+ (void)removeArrangeConstraintsOnSuperview:(UIView * _Nonnull)aView;
+ (void)removeArrangeConstraintsOnSuperviewSafeLayoutGuide:(UIView * _Nonnull)aView;
+ (void)removeSizeConstraintOnSelf:(UIView * _Nonnull)aView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSDictionary<KeyType, ObjectType> (SWIFT_EXTENSION(GFPSDK))
- (id _Nullable)objectWithKey:(id _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)objectWithKey:(id _Nonnull)key returnType:(Class _Nonnull)classType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)boolWithKey:(id _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isEmpty:(NSDictionary * _Nullable)dict SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSString (SWIFT_EXTENSION(GFPSDK))
- (NSString * _Nullable)encodingSubStringFromAIndex:(NSInteger)aIndex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)encodingSubStringToAIndex:(NSInteger)aIndex SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isStringNumeric SWIFT_WARN_UNUSED_RESULT;
@end



@interface NSTimer (SWIFT_EXTENSION(GFPSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double kAttachedCheckDefaultFrequency;)
+ (double)kAttachedCheckDefaultFrequency SWIFT_WARN_UNUSED_RESULT;
+ (NSTimer * _Nonnull)scheduledTimerWithTimeInterval:(NSTimeInterval)timeInterval block:(void (^ _Nonnull)(void))block repeats:(BOOL)repeats SWIFT_WARN_UNUSED_RESULT;
+ (NSTimer * _Nonnull)scheduledTimerWithTimeInterval:(NSTimeInterval)timeInterval block:(void (^ _Nonnull)(void))block repeats:(BOOL)repeats mode:(NSRunLoopMode _Nonnull)mode SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIColor (SWIFT_EXTENSION(GFPSDK))
+ (UIColor * _Nonnull)colorWithRGBIntWith:(uint64_t)rgbInt SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithRGBIntWith:(uint64_t)rgbInt alpha:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT;
+ (UIColor * _Nonnull)colorWithRedWith:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImageView (SWIFT_EXTENSION(GFPSDK))
- (void)startSpinningWith:(double)duration;
- (void)stopSpinning;
+ (UIImage * _Nullable)imageWithImageWithImage:(UIImage * _Nonnull)image scaleSize:(CGSize)scaleSize SWIFT_WARN_UNUSED_RESULT;
@end

@class NSBundle;

@interface UIView (SWIFT_EXTENSION(GFPSDK))
+ (NSString * _Nonnull)frameWith:(CGRect)frame SWIFT_WARN_UNUSED_RESULT;
- (void)printSizeWithFunctionName:(NSArray<NSNumber *> * _Nonnull)functionName;
- (void)printOriginWithFunctionName:(NSArray<NSNumber *> * _Nonnull)functionName;
- (CGFloat)sideSafeAreaInsets SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)sizeWidth SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)sizeHeight SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)leftSafeInsets SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)rightSafeInsets SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)topSafeInsets SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)topBottomSafeAreaInsets SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)maxY SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)maxX SWIFT_WARN_UNUSED_RESULT;
- (void)showDebugBorderWithColorWithColor:(UIColor * _Nonnull)color;
- (void)addConstraintCenterWithAItem:(UIView * _Nonnull)aItem toItem:(UIView * _Nonnull)toItem attribute:(enum NSLayoutAttribute)attribute;
- (void)moveWith:(enum GFPAlignmentCenter)type;
- (void)moveWith:(enum GFPAlignmentCenter)type margin:(CGFloat)margin;
- (void)moveToTypeWith:(GFPAlignment)type margin:(CGFloat)margin;
- (void)moveToTypeWith:(GFPAlignment)type withView:(UIView * _Nonnull)view gap:(CGFloat)gap;
- (void)alignWith:(GFPAlignment)type withView:(UIView * _Nonnull)view;
- (void)alignWith:(GFPAlignment)type withView:(UIView * _Nonnull)view gap:(CGFloat)gap;
- (void)alignCenterWith:(enum GFPAlignmentCenter)type withView:(UIView * _Nonnull)view;
- (void)alignCenterWith:(enum GFPAlignmentCenter)type withView:(UIView * _Nonnull)view gap:(CGFloat)gap;
- (void)updateSizeWith:(enum GFPSizeType)type value:(CGFloat)value;
- (void)updateSizeWith:(CGSize)aSize;
- (void)updateOriginWith:(CGPoint)aOrigin;
- (void)updateOriginTypeWith:(enum GFPOriginType)aType value:(CGFloat)aValue;
- (void)enableAccessibilityForLabelSubviews;
- (void)disableAccessibilityForLabelSubviews;
- (void)enableAccessibilityForImageSubviews;
- (void)disableAccessibilityForImageSubviews;
- (void)disableAccessibilityForSubviews;
+ (UIView * _Nullable)loadWithBundleWithABundle:(NSBundle * _Nonnull)aBundle nibName:(NSString * _Nonnull)nibName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6GFPSDK20kGFPAdInterfaceStyle")
@interface kGFPAdInterfaceStyle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Changed;)
+ (NSString * _Nonnull)Changed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
