#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef GFPSDK_SWIFT_H
#define GFPSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import NaverAdsServices;
@import ObjectiveC;
@import UIKit;
#endif

#import <GFPSDK/GFPSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GFPSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSDate;
@class NSString;
@class NSURLRequest;
@class NSData;
@class NSURLResponse;

SWIFT_CLASS("_TtC6GFPSDK9GFPAPILog")
@interface GFPAPILog : NSObject
@property (nonatomic, readonly, copy) NSDate * _Nonnull timestamp;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable extraLogs;
- (nonnull instancetype)initWithTime:(NSDate * _Nonnull)time OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTime:(NSDate * _Nonnull)time request:(NSURLRequest * _Nonnull)request data:(NSData * _Nullable)data response:(NSURLResponse * _Nullable)response error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)updateWithRequest:(NSURLRequest * _Nullable)request;
- (void)updateWithData:(NSData * _Nullable)data response:(NSURLResponse * _Nullable)response error:(NSError * _Nullable)error;
- (void)addExtraLogForKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS_NAMED("GFPAdInitProviderAdditionalInfo")
@interface GFPAdInitProviderAdditionalInfo : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable productTypes;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable adUnitIds;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable appSignatureId;
- (nullable instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nullable)dict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP6GFPSDK18GFPDictPresentable_")
@protocol GFPDictPresentable
- (NSDictionary<NSString *, NSString *> * _Nullable)dictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("GFPAdInitProviderInfo")
@interface GFPAdInitProviderInfo : NSObject <GFPDictPresentable>
@property (nonatomic, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSString * _Nonnull placeId;
@property (nonatomic) BOOL testMode;
@property (nonatomic, strong) GFPAdInitProviderAdditionalInfo * _Nullable additionalInfo;
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type testMode:(BOOL)testMode OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, NSString *> * _Nullable)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<GFPAdInitProviderInfo *> * _Nullable)adProviders:(NSDictionary<NSString *, id> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIView;
@class NSUUID;
@class GFPLoadResponseInfo;
@class GFPAdParam;
@class GFPVideoAdParam;
@class GFPExtraRequestParam;
@class GFPInspectorInternalLog;
@class GFPError;
@class GFPCachedAdParam;

SWIFT_CLASS("_TtC6GFPSDK8GFPAdLog")
@interface GFPAdLog : NSObject
@property (nonatomic, weak) UIView * _Nullable adView;
@property (nonatomic, readonly, copy) NSDate * _Nonnull timestamp;
@property (nonatomic, copy) NSUUID * _Nonnull logId;
@property (nonatomic, copy) NSString * _Nullable adUnitID;
@property (nonatomic, strong) GFPAPILog * _Nullable adRequestLog;
@property (nonatomic, copy) NSArray<GFPAPILog *> * _Nonnull adEventLogs;
@property (nonatomic, strong) GFPLoadResponseInfo * _Nullable loadResponseInfo;
@property (nonatomic, strong) GFPAdParam * _Nullable adParam;
@property (nonatomic, strong) GFPVideoAdParam * _Nullable videoParam;
@property (nonatomic, strong) GFPExtraRequestParam * _Nullable extraParam;
@property (nonatomic) NSTimeInterval timeoutInterval;
@property (nonatomic, copy) NSArray<GFPInspectorInternalLog *> * _Nonnull internalLogs;
@property (nonatomic, copy) NSString * _Nullable errorMessage;
- (void)addError:(GFPError * _Nonnull)error;
@property (nonatomic, strong) GFPCachedAdParam * _Nullable cachedParam;
- (nonnull instancetype)initWithLogId:(NSUUID * _Nonnull)logId OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)creativeType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)providerName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class GFPNativeAdRenderingSetting;
@class GFPVideoOptions;

SWIFT_CLASS("_TtC6GFPSDK18GFPAdNativeOptions")
@interface GFPAdNativeOptions : NSObject
/// 광고 렌터링 세팅 (Optional)
@property (nonatomic, strong) GFPNativeAdRenderingSetting * _Nullable renderingSetting;
/// 네이티브 동영상 광고 세팅 (Optional)
@property (nonatomic, strong) GFPVideoOptions * _Nullable videoOptions;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GFPNativeSimpleAdRenderingSetting;
@class GFPNativeTemplateOptions;

SWIFT_CLASS("_TtC6GFPSDK24GFPAdNativeSimpleOptions")
@interface GFPAdNativeSimpleOptions : NSObject
/// 네이티브 Simple 형(=단일 이미지) 광고 렌더링 세팅 (Optional)
@property (nonatomic, strong) GFPNativeSimpleAdRenderingSetting * _Nullable simpleAdRenderingSetting;
/// 네이티브 템플릿 광고 세팅 (Optional)
@property (nonatomic, strong) GFPNativeTemplateOptions * _Nullable templateOptions;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC6GFPSDK20GFPAdProviderSetting")
@interface GFPAdProviderSetting : NSObject
@property (nonatomic, readonly) GFPAdProviderSettingType type;
@property (nonatomic, readonly) BOOL isTestMode;
+ (GFPAdProviderSetting * _Nonnull)type:(GFPAdProviderSettingType)type testMode:(BOOL)testMode SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIColor;

SWIFT_CLASS("_TtC6GFPSDK16GFPAdStyleOption")
@interface GFPAdStyleOption : NSObject
/// 배경 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable backgroundColor;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nullable)backgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPAdViewType, open) {
  GFPAdViewTypeUnknown = 0,
  GFPAdViewTypeBanner = 1,
  GFPAdViewTypeNativeNormal = 2,
  GFPAdViewTypeNativeSimple = 3,
  GFPAdViewTypeVideo = 4,
  GFPAdViewTypeScheduledVideo = 5,
  GFPAdViewTypeRewarded = 6,
  GFPAdViewTypeInterstitial = 7,
};

@class GFPBackgroundOptionAttributes;

SWIFT_CLASS_NAMED("GFPBackgroundOption")
@interface GFPBackgroundOption : NSObject
@property (nonatomic, strong) GFPBackgroundOptionAttributes * _Nonnull light;
@property (nonatomic, strong) GFPBackgroundOptionAttributes * _Nonnull dark;
- (nonnull instancetype)initWithLight:(GFPBackgroundOptionAttributes * _Nonnull)light dark:(GFPBackgroundOptionAttributes * _Nonnull)dark OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("GFPBackgroundOptionAttributes")
@interface GFPBackgroundOptionAttributes : NSObject
@property (nonatomic, strong) UIColor * _Nonnull color;
@property (nonatomic) CGFloat alpha;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat leftMargin;
@property (nonatomic) CGFloat rightMargin;
@property (nonatomic) CGFloat topMargin;
@property (nonatomic) CGFloat bottomMargin;
@property (nonatomic) CGFloat maxWidth;
@property (nonatomic, strong) UIColor * _Nullable shadowColor;
@property (nonatomic) CGFloat shadowAlpha;
@property (nonatomic) CGFloat shadowRadius;
@property (nonatomic) CGFloat shadowSpread;
@property (nonatomic) CGFloat shadowX;
@property (nonatomic) CGFloat shadowY;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK14GFPBadgeOption")
@interface GFPBadgeOption : NSObject
/// Badge의 Border 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable borderColor;
/// Badge의 Border Alpha
@property (nonatomic, readonly) CGFloat borderAlpha;
/// Badge의 BorderWidth
@property (nonatomic, readonly) CGFloat borderWidth;
/// Badge의 배경 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable badgeBgColor;
/// Badge의 배경 Alpha
@property (nonatomic, readonly) CGFloat badgeBgAlpha;
- (nonnull instancetype)initWithBorderColor:(UIColor * _Nullable)borderColor borderAlpha:(CGFloat)borderAlpha borderWidth:(CGFloat)borderWidth badgeBgColor:(UIColor * _Nullable)badgeBgColor badgeBgAlpha:(CGFloat)badgeBgAlpha OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// GFP에서 지원하는 배너광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPBannerProviderOption, open) {
  GFPBannerProviderOptionNone = 0,
  GFPBannerProviderOptionNDA = 1,
  GFPBannerProviderOptionDFP = 2,
  GFPBannerProviderOptionInMobi = 3,
  GFPBannerProviderOptionFAN = 4,
  GFPBannerProviderOptionUnity = 5,
  GFPBannerProviderOptionAppLovin = 6,
  GFPBannerProviderOptionVungle = 7,
  GFPBannerProviderOptionDT = 8,
  GFPBannerProviderOptionIS = 9,
  GFPBannerProviderOptionAPS = 10,
  GFPBannerProviderOptionChartBoost = 11,
  GFPBannerProviderOptionBidMachine = 12,
  GFPBannerProviderOptionEnd = 13,
};


SWIFT_CLASS("_TtC6GFPSDK9GFPBundle")
@interface GFPBundle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPBundle * _Nonnull sharedInstance;)
+ (GFPBundle * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)sdkResourceStringWith:(NSString * _Nonnull)aMessageKey SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)sdkResourceWith:(NSString * _Nullable)aPath type:(NSString * _Nullable)aType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP6GFPSDK25GFPCarouselHeightDelegate_")
@protocol GFPCarouselHeightDelegate <NSObject>
- (CGFloat)preferredHeightWithFixedWidth:(CGFloat)fixedWidth SWIFT_WARN_UNUSED_RESULT;
@end

/// GFP에서 지원하는 Combined (배너, 네이티브)광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPCombinedProviderOption, open) {
  GFPCombinedProviderOptionNone = 0,
  GFPCombinedProviderOptionDFP = 1,
  GFPCombinedProviderOptionEnd = 2,
};


@class NSBundle;

SWIFT_CLASS("_TtC6GFPSDK14GFPCustomAsset")
@interface GFPCustomAsset : NSObject
@property (nonatomic, readonly, strong) NSBundle * _Nullable bundle;
@property (nonatomic, readonly) CGSize size;
@property (nonatomic, readonly, copy) NSString * _Nonnull lightModeName;
@property (nonatomic, readonly, copy) NSString * _Nonnull darkModeName;
@property (nonatomic, readonly, strong) UIColor * _Nonnull darkModeColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull lightModeColor;
@property (nonatomic, readonly) BOOL isTemplateMode;
@property (nonatomic, readonly, copy) NSString * _Nonnull templateImageName;
- (nonnull instancetype)initWith:(NSBundle * _Nullable)bundle size:(CGSize)size lightModeName:(NSString * _Nonnull)lightModeName darkModeName:(NSString * _Nonnull)darkModeName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWith:(NSBundle * _Nullable)bundle size:(CGSize)size templateImageName:(NSString * _Nonnull)templateImageName lightModeColor:(UIColor * _Nonnull)lightModeColor darkModeColor:(UIColor * _Nonnull)darkModeColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL isExistResource;
- (UIColor * _Nullable)getTintColor:(BOOL)isDarkMode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK12GFPDateUtils")
@interface GFPDateUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK11GFPDebugger")
@interface GFPDebugger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPDebugger * _Nonnull shared;)
+ (GFPDebugger * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL waterfallDebugEnabled;
@property (nonatomic, copy) NSString * _Nullable waterfallFileName;
@property (nonatomic) BOOL sdkInitDebugEnabled;
@property (nonatomic, copy) NSString * _Nullable sdkInitFileName;
- (NSDictionary<NSString *, id> * _Nullable)debugWaterfallDict SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nullable)debugAdInitDict SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface GFPError (SWIFT_EXTENSION(GFPSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull gfpLogDescription;
@end



@class NSCoder;

SWIFT_CLASS_NAMED("GFPGradientLabelView")
@interface GFPGradientLabelView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)sizeToFit;
@property (nonatomic, copy) NSString * _Nullable text;
- (void)createGradientViewWithStartPoint:(CGPoint)startPoint endPoint:(CGPoint)endPoint colors:(NSArray * _Nonnull)colors;
- (void)updateGradientViewWithIsHidden:(BOOL)isHidden;
- (void)updateViewSizeWithASize:(CGSize)aSize;
- (void)updateTextColorWithColor:(UIColor * _Nonnull)color;
@end

@class UIImage;

SWIFT_CLASS("_TtC6GFPSDK11GFPIconData")
@interface GFPIconData : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat unknwonAspectRatio;)
+ (CGFloat)unknwonAspectRatio SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) UIImage * _Nullable image;
/// 아이콘의 aspectRatio. 값이 없을 경우 -1 을 반환.
@property (nonatomic, readonly) CGFloat aspectRatio;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
+ (GFPIconData * _Nonnull)createIconInfoWith:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;

SWIFT_CLASS_NAMED("GFPInspector")
@interface GFPInspector : NSObject
+ (GFPInspector * _Nonnull)makeInspectorWithLogId:(NSUUID * _Nonnull)logId adViewType:(NSNumber * _Nonnull)adViewType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithLogId:(NSUUID * _Nonnull)logId adViewType:(enum GFPAdViewType)adViewType OBJC_DESIGNATED_INITIALIZER;
- (void)updateLogId:(NSUUID * _Nonnull)logId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK22GFPInspectorAccessInfo")
@interface GFPInspectorAccessInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK19GFPInspectorEnabler")
@interface GFPInspectorEnabler : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPInspectorEnabler * _Nonnull shared;)
+ (GFPInspectorEnabler * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setup;
@end

@class UILongPressGestureRecognizer;

SWIFT_CLASS("_TtC6GFPSDK21GFPInspectorInterface")
@interface GFPInspectorInterface : NSObject
- (nonnull instancetype)initWithLogId:(NSUUID * _Nonnull)logId adViewType:(enum GFPAdViewType)adViewType OBJC_DESIGNATED_INITIALIZER;
- (void)updateLogIdWith:(NSUUID * _Nullable)logId;
- (UILongPressGestureRecognizer * _Nullable)registerGestureOnView:(UIView * _Nonnull)view logId:(NSUUID * _Nullable)logId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum GFPInspectorInternalLogType : NSInteger;

SWIFT_CLASS_NAMED("GFPInspectorInternalLog")
@interface GFPInspectorInternalLog : NSObject
- (nonnull instancetype)initWithType:(enum GFPInspectorInternalLogType)type extraDescription:(NSString * _Nullable)extraDescription OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum GFPInspectorInternalLogType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPInspectorInternalLogType, open) {
  GFPInspectorInternalLogTypeAckImpression = 0,
  GFPInspectorInternalLogTypeClickedImpression = 1,
  GFPInspectorInternalLogTypeCompletionImpression = 2,
  GFPInspectorInternalLogTypeAdMuteImpression = 3,
  GFPInspectorInternalLogTypeClosedImpression = 4,
  GFPInspectorInternalLogTypeAttachedImpression = 5,
  GFPInspectorInternalLogTypeRenderedImpression = 6,
  GFPInspectorInternalLogTypeViewableImpression = 7,
  GFPInspectorInternalLogTypeLoadError = 8,
  GFPInspectorInternalLogTypeStartError = 9,
  GFPInspectorInternalLogTypeLazyRenderMediaFailedError = 10,
  GFPInspectorInternalLogTypeVimp1pxEvent = 11,
  GFPInspectorInternalLogTypeVimp100Event = 12,
  GFPInspectorInternalLogTypeVimp100pEvent = 13,
  GFPInspectorInternalLogTypeAdmuteEvent = 14,
  GFPInspectorInternalLogTypeAdvmuteEvent = 15,
  GFPInspectorInternalLogTypePrivEvent = 16,
  GFPInspectorInternalLogTypeBounceEvent = 17,
};


SWIFT_CLASS("_TtC6GFPSDK20GFPInspectorLogIndex")
@interface GFPInspectorLogIndex : NSObject
@property (nonatomic, copy) NSUUID * _Nullable logId;
@property (nonatomic, copy) NSString * _Nullable logSender;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPInspectorLogType, open) {
  GFPInspectorLogTypeInspector = 0,
  GFPInspectorLogTypeAd = 1,
  GFPInspectorLogTypeAdView = 2,
  GFPInspectorLogTypeSdkInfo = 3,
};

@class GFPSDKInitResult;

SWIFT_CLASS_NAMED("GFPInspectorLogger")
@interface GFPInspectorLogger : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPInspectorLogger * _Nonnull shared;)
+ (GFPInspectorLogger * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)addNewAdLogWithLogId:(NSUUID * _Nonnull)logId;
- (GFPAdLog * _Nullable)adLogForLogId:(NSUUID * _Nonnull)logId SWIFT_WARN_UNUSED_RESULT;
- (void)logAdViewTypeWith:(NSNumber * _Nonnull)adViewType logId:(NSUUID * _Nonnull)logId;
- (void)logAdError:(GFPError * _Nonnull)error logId:(NSUUID * _Nonnull)logId;
- (void)logAdView:(UIView * _Nonnull)adView logId:(NSUUID * _Nonnull)logId;
- (void)logInternalLog:(GFPInspectorInternalLog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logAdRequest:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logAdEvent:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logSDKInitRequest:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)addNewSDKInitLogWithLogId:(NSUUID * _Nonnull)logId;
- (void)logSDKInitWithResult:(GFPSDKInitResult * _Nonnull)result logId:(NSUUID * _Nonnull)logId;
- (void)logUnavailableAdTypeWithBannerOption:(NSNumber * _Nonnull)option;
- (void)logUnavailableAdTypeWithNativeOption:(NSNumber * _Nonnull)option;
- (void)logUnavailableAdTypeWithCombinedOption:(NSNumber * _Nonnull)option;
- (void)logUnavailableAdTypeWithVideoOption:(NSNumber * _Nonnull)option;
- (void)logUnavailableAdTypeWithRewardedOption:(NSNumber * _Nonnull)option;
- (void)logUnavailableAdTypeWithInterstitialOption:(NSNumber * _Nonnull)option;
- (void)logAvailableMediationWithProviderType:(GFPProviderType _Nonnull)providerType productType:(GFPProviderProductType _Nonnull)productType;
- (void)logNotUsedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logInitializedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logBlockedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logErroredMediationWithProviderType:(GFPProviderType _Nonnull)providerType creativeType:(GFPProviderCreativeType _Nonnull)creativeType;
@end


@class GFPWaterfallAdSize;

SWIFT_CLASS("_TtC6GFPSDK16GFPInternalUtils")
@interface GFPInternalUtils : NSObject
+ (NSArray<GFPWaterfallAdSize *> * _Nonnull)adResponseSizeWithDictionary:(NSDictionary * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<GFPWaterfallAdSize *> * _Nonnull)adResponseSizeWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<GFPWaterfallAdSize *> * _Nonnull)adResponseSizeWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// GFP에서 지원하는 Interstitial 광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPInterstitialAdProviderOption, open) {
  GFPInterstitialAdProviderOptionNone = 0,
  GFPInterstitialAdProviderOptionDFP = 1,
  GFPInterstitialAdProviderOptionFAN = 2,
  GFPInterstitialAdProviderOptionInMobi = 3,
  GFPInterstitialAdProviderOptionUnity = 4,
  GFPInterstitialAdProviderOptionAppLovin = 5,
  GFPInterstitialAdProviderOptionNDA = 6,
  GFPInterstitialAdProviderOptionVungle = 7,
  GFPInterstitialAdProviderOptionDT = 8,
  GFPInterstitialAdProviderOptionIS = 9,
  GFPInterstitialAdProviderOptionAPS = 10,
  GFPInterstitialAdProviderOptionLAN = 11,
  GFPInterstitialAdProviderOptionChartBoost = 12,
  GFPInterstitialAdProviderOptionBidMachine = 13,
  GFPInterstitialAdProviderOptionEnd = 14,
};

@class GFPSpannableOption;

SWIFT_CLASS("_TtC6GFPSDK14GFPLabelOption")
@interface GFPLabelOption : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nullable defaultHighlightBgColor;)
+ (UIColor * _Nullable)defaultHighlightBgColor SWIFT_WARN_UNUSED_RESULT;
/// Label 에 해당하는 문자열.
@property (nonatomic, readonly, copy) NSString * _Nullable text;
/// Label 의 텍스트 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable textColor;
/// Label 의 Bold여부
@property (nonatomic, readonly) BOOL isBold;
/// Label의 배경 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable bgColor;
/// 광고의 색상 전환이 필요할 때 배경 색상
@property (nonatomic, readonly, strong) UIColor * _Nullable highlightBgColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text;
/// 쇼핑광고의 Badge 지원
@property (nonatomic, readonly, strong) GFPBadgeOption * _Nullable badgeOption;
/// 쇼핑광고 AttributeString 처리
@property (nonatomic, readonly, copy) NSArray<GFPSpannableOption *> * _Nullable spnnableOption;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text highlightBgColor:(UIColor * _Nullable)highlightBgColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text textColor:(UIColor * _Nullable)textColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text textColor:(UIColor * _Nullable)textColor highlightBgColor:(UIColor * _Nullable)highlightBgColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text bgColor:(UIColor * _Nullable)bgColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text textColor:(UIColor * _Nullable)textColor bgColor:(UIColor * _Nullable)bgColor highlightBgColor:(UIColor * _Nullable)highlightBgColor;
- (nonnull instancetype)initWithText:(NSString * _Nullable)text textColor:(UIColor * _Nullable)textColor bgColor:(UIColor * _Nullable)bgColor highlightBgColor:(UIColor * _Nullable)highlightBgColor isBold:(BOOL)isBold badgeOption:(GFPBadgeOption * _Nullable)badgeOption spannableOption:(NSArray<GFPSpannableOption *> * _Nullable)spannableOption OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol GFPQueueObject;

SWIFT_CLASS("_TtC6GFPSDK13GFPLimitQueue")
@interface GFPLimitQueue : NSObject
@property (nonatomic, readonly, copy) NSArray<id <GFPQueueObject>> * _Nonnull queue;
@property (nonatomic, readonly) NSInteger size;
@property (nonatomic, readonly) BOOL isFull;
@property (nonatomic, readonly) BOOL isEmpty;
- (void)enqueue:(id <GFPQueueObject> _Nullable)queueObject;
- (void)enqueueAndReplace:(id <GFPQueueObject> _Nullable)queueObject;
- (id <GFPQueueObject> _Nullable)dequeue SWIFT_WARN_UNUSED_RESULT;
+ (GFPLimitQueue * _Nonnull)sizeWith:(NSInteger)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithSize:(NSInteger)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum GFPNativeProviderOption : NSInteger;
enum GFPVideoProviderOption : NSInteger;
enum GFPRewardedAdProviderOption : NSInteger;

SWIFT_CLASS_NAMED("GFPLogCollector")
@interface GFPLogCollector : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPLogCollector * _Nonnull shared;)
+ (GFPLogCollector * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL inspectorLoggingEnagled;
- (void)enableInspectorLoggingWithEnable:(BOOL)enable;
- (void)addNewAdLogWithLogId:(NSUUID * _Nonnull)logId;
- (void)logAdLogProperty:(id _Nullable)value forKey:(NSString * _Nonnull)key logId:(NSUUID * _Nonnull)logId;
- (void)logAdError:(GFPError * _Nonnull)error logId:(NSUUID * _Nonnull)logId;
- (void)logAdView:(UIView * _Nonnull)adView logId:(NSUUID * _Nonnull)logId;
- (void)logAdViewType:(enum GFPAdViewType)adViewType logId:(NSUUID * _Nonnull)logId;
- (void)logAdRequest:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logAdEvent:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logSDKInitRequest:(GFPAPILog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)logInternalLog:(GFPInspectorInternalLog * _Nonnull)log logId:(NSUUID * _Nonnull)logId;
- (void)addNewSDKInitLogWithLogId:(NSUUID * _Nonnull)logId;
- (void)logSDKInitWithResult:(GFPSDKInitResult * _Nonnull)result logId:(NSUUID * _Nonnull)logId;
- (void)logUnavailableMediationWithBannerOption:(enum GFPBannerProviderOption)option;
- (void)logUnavailableMediationWithNativeOption:(enum GFPNativeProviderOption)option;
- (void)logUnavailableMediationWithCombinedOption:(enum GFPCombinedProviderOption)option;
- (void)logUnavailableMediationWithVideoOption:(enum GFPVideoProviderOption)option;
- (void)logUnavailableMediationWithRewardedOption:(enum GFPRewardedAdProviderOption)option;
- (void)logUnavailableMediationWithInterstitialOption:(enum GFPInterstitialAdProviderOption)option;
- (void)logAvailableMediationWithProviderType:(GFPProviderType _Nonnull)providerType productType:(GFPProviderProductType _Nonnull)productType;
- (void)logNotUsedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logInitializedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logBlockedMediationWithProviderType:(GFPProviderType _Nonnull)providerType;
- (void)logErroredMediationWithProviderType:(GFPProviderType _Nonnull)providerType creativeType:(GFPProviderCreativeType _Nonnull)creativeType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum GFPMediaType : NSInteger;
@class GFPVideoController;
@class GFPRichMediaData;

SWIFT_CLASS("_TtC6GFPSDK12GFPMediaData")
@interface GFPMediaData : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat unknwonAspectRatio;)
+ (CGFloat)unknwonAspectRatio SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) enum GFPMediaType mediaType;
@property (nonatomic, readonly, strong) GFPVideoController * _Nullable videoController;
@property (nonatomic, readonly, strong) GFPRichMediaData * _Nullable richMediaData;
@property (nonatomic) CGFloat preferredMediaHeight;
@property (nonatomic) CGFloat preferredMediaWidth;
@property (nonatomic, weak) id <GFPCarouselHeightDelegate> _Nullable carouselHeightDelegate;
@property (nonatomic, weak) UIImage * _Nullable image;
- (CGFloat)preferredHeightWithFixedWidth:(CGFloat)fixedWidth SWIFT_WARN_UNUSED_RESULT;
/// 미디어의 aspectRatio. 값이 없을 경우 -1 을 반환.
@property (nonatomic, readonly) CGFloat aspectRatio;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
+ (GFPMediaData * _Nonnull)createImageInfoWith:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createVideoInfoWith:(GFPVideoController * _Nullable)videoController SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createRichMediaInfo SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createRichMediaInfo:(GFPRichMediaData * _Nonnull)richMediaInfo SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createC2SInfoWith:(enum GFPMediaType)type aspectRatio:(CGFloat)c2sAspectRatio SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createCarouseMedialInfo SWIFT_WARN_UNUSED_RESULT;
+ (GFPMediaData * _Nonnull)createComplexMediaInfo:(UIImage * _Nullable)image videoController:(GFPVideoController * _Nullable)videoController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPMediaType, open) {
  GFPMediaTypeImage = 0,
  GFPMediaTypeVideo = 1,
  GFPMediaTypeRichMedia = 2,
  GFPMediaTypeCarousel = 3,
  GFPMediaTypeC2s_image = 4,
  GFPMediaTypeC2s_video = 5,
  GFPMediaTypeUnknown = 6,
};


SWIFT_PROTOCOL_NAMED("GFPMediationConfiguring")
@protocol GFPMediationConfiguring <NSObject>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediationVersion;)
+ (NSString * _Nonnull)mediationVersion SWIFT_WARN_UNUSED_RESULT;
@end

/// GFP에서 지원하는 네이티브광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPNativeProviderOption, open) {
  GFPNativeProviderOptionNone = 0,
  GFPNativeProviderOptionNDA = 1,
  GFPNativeProviderOptionDFP = 2,
  GFPNativeProviderOptionFAN = 3,
  GFPNativeProviderOptionInMobi = 4,
  GFPNativeProviderOptionVungle = 5,
  GFPNativeProviderOptionLAN = 6,
  GFPNativeProviderOptionBidMachine = 7,
  GFPNativeProviderOptionEnd = 8,
};



SWIFT_CLASS("_TtC6GFPSDK18GFPQoeTrackingInfo")
@interface GFPQoeTrackingInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull urlString;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull timeTable;
@property (nonatomic, readonly, copy) NSString * _Nonnull serviceId;
@property (nonatomic, readonly, copy) NSString * _Nonnull ownerServiceId;
@property (nonatomic, readonly, copy) NSString * _Nonnull appId;
@property (nonatomic, readonly, copy) NSString * _Nonnull viewerInfo;
@property (nonatomic, readonly) BOOL isValid;
+ (GFPQoeTrackingInfo * _Nonnull)createQoeTrackingInfoWith:(NSString * _Nonnull)host path:(NSString * _Nonnull)path timeTable:(NSArray<NSNumber *> * _Nonnull)timeTable serviceId:(NSString * _Nonnull)serviceId ownerServiceId:(NSString * _Nonnull)ownerServiceId appId:(NSString * _Nonnull)appId viewerInfo:(NSString * _Nonnull)viewerInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP6GFPSDK14GFPQueueObject_")
@protocol GFPQueueObject <NSObject>
@end


SWIFT_CLASS_NAMED("GFPRendererShoppingLabelView")
@interface GFPRendererShoppingLabelView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyNStore;)
+ (NSString * _Nonnull)extraKeyNStore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyLabelText;)
+ (NSString * _Nonnull)extraKeyLabelText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyLabelText2;)
+ (NSString * _Nonnull)extraKeyLabelText2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyLabelImage;)
+ (NSString * _Nonnull)extraKeyLabelImage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyLabelImage2;)
+ (NSString * _Nonnull)extraKeyLabelImage2 SWIFT_WARN_UNUSED_RESULT;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class GFPMediaView;
@protocol GFPNativeAssetProtocol;

@interface GFPRendererShoppingLabelView (SWIFT_EXTENSION(GFPSDK)) <GFPNativeTemplateViewProtocol>
- (UILabel * _Nullable)advertiseAssetView SWIFT_WARN_UNUSED_RESULT;
- (GFPMediaView * _Nullable)mediaContainerView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)bodyAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)ctaAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)noticeAssetView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)adChoicesContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)extraViewWith:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)createView SWIFT_WARN_UNUSED_RESULT;
- (void)bindWith:(id <GFPNativeAssetProtocol> _Nullable)asset;
- (void)changeStyleWith:(BOOL)isDarkMode;
- (CGFloat)estimateHeight SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("GFPRendererShoppingNDAView")
@interface GFPRendererShoppingNDAView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyDiscount;)
+ (NSString * _Nonnull)extraKeyDiscount SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyLabelBadge;)
+ (NSString * _Nonnull)extraKeyLabelBadge SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraKeyStar;)
+ (NSString * _Nonnull)extraKeyStar SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull extraViewKeyBadge;)
+ (NSString * _Nonnull)extraViewKeyBadge SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


@class GFPNativeBaseRenderingSetting;

@interface GFPRendererShoppingNDAView (SWIFT_EXTENSION(GFPSDK)) <GFPNativeTemplateViewProtocol>
- (UILabel * _Nullable)titleAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)advertiseAssetView SWIFT_WARN_UNUSED_RESULT;
- (GFPMediaView * _Nullable)mediaContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)bodyAssetView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)extraViewWith:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)createView SWIFT_WARN_UNUSED_RESULT;
- (void)bindWith:(id <GFPNativeAssetProtocol> _Nullable)asset;
- (void)changeStyleWith:(BOOL)isDarkMode;
- (CGFloat)estimateHeight SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)scaleRatio SWIFT_WARN_UNUSED_RESULT;
- (void)updateRenderingSetting:(GFPNativeBaseRenderingSetting * _Nullable)renderingSetting;
@end


SWIFT_CLASS_NAMED("GFPRendererSmartChannelFlickingView")
@interface GFPRendererSmartChannelFlickingView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double smartChannelHeight;)
+ (double)smartChannelHeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double smartChannelMaxWidth;)
+ (double)smartChannelMaxWidth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double smartChannelMaxHeight;)
+ (double)smartChannelMaxHeight SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


@interface GFPRendererSmartChannelFlickingView (SWIFT_EXTENSION(GFPSDK)) <GFPNativeTemplateViewProtocol>
- (GFPMediaView * _Nullable)mediaContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)adChoicesContainerView SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)createView SWIFT_WARN_UNUSED_RESULT;
- (void)bindWith:(id <GFPNativeAssetProtocol> _Nullable)asset;
- (void)changeStyleWith:(BOOL)isDarkMode;
- (CGFloat)estimateHeight SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("GFPRendererUtils")
@interface GFPRendererUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GFPRendererUtils * _Nonnull sharedInstance;)
+ (GFPRendererUtils * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)loadNibWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)loadImageWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// GFP에서 지원하는 Reward 광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPRewardedAdProviderOption, open) {
  GFPRewardedAdProviderOptionNone = 0,
  GFPRewardedAdProviderOptionDFP = 1,
  GFPRewardedAdProviderOptionFAN = 2,
  GFPRewardedAdProviderOptionInMobi = 3,
  GFPRewardedAdProviderOptionUnity = 4,
  GFPRewardedAdProviderOptionAppLovin = 5,
  GFPRewardedAdProviderOptionNDA = 6,
  GFPRewardedAdProviderOptionVungle = 7,
  GFPRewardedAdProviderOptionDT = 8,
  GFPRewardedAdProviderOptionIS = 9,
  GFPRewardedAdProviderOptionAPS = 10,
  GFPRewardedAdProviderOptionLAN = 11,
  GFPRewardedAdProviderOptionChartBoost = 12,
  GFPRewardedAdProviderOptionBidMachine = 13,
  GFPRewardedAdProviderOptionEnd = 14,
};

enum GFPRichMediaDataAdType : NSInteger;

SWIFT_CLASS("_TtC6GFPSDK16GFPRichMediaData")
@interface GFPRichMediaData : NSObject
@property (nonatomic, readonly) enum GFPRichMediaDataAdType adType;
@property (nonatomic, readonly) GFPRichExtendMediaRatioType _Nonnull extendMediaAspectRatioType;
@property (nonatomic, readonly) CGSize extendMediaSize;
- (nonnull instancetype)initWithAdType:(enum GFPRichMediaDataAdType)adType videoRatioType:(GFPRichExtendMediaRatioType _Nonnull)videoRatioType mediaSize:(CGSize)mediaSize OBJC_DESIGNATED_INITIALIZER;
+ (GFPRichMediaData * _Nonnull)createWithAdType:(enum GFPRichMediaDataAdType)adType mediaSize:(CGSize)mediaSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GFPRichMediaDataAdType, open) {
  GFPRichMediaDataAdTypeNewVideoExtendV2 = 0,
};


SWIFT_PROTOCOL("_TtP6GFPSDK21GFPS2SAdClickDelegate_")
@protocol GFPS2SAdClickDelegate <NSObject>
- (void)openURLWith:(NSString * _Nonnull)urlString landingHandler:(void (^ _Nonnull)(BOOL))landingHandler;
@end


SWIFT_CLASS("_TtC6GFPSDK16GFPSDKInitResult")
@interface GFPSDKInitResult : NSObject
@property (nonatomic) BOOL isSuccess;
@property (nonatomic) BOOL isCached;
@property (nonatomic, copy) NSString * _Nullable publisherCode;
@property (nonatomic, copy) NSString * _Nullable serviceCode;
@property (nonatomic, strong) GFPError * _Nullable error;
- (nonnull instancetype)initWithIsSuccess:(BOOL)isSuccess isCached:(BOOL)isCached publisherCode:(NSString * _Nullable)publisherCode serviceCode:(NSString * _Nullable)serviceCode error:(GFPError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK11GFPSDKPhase")
@interface GFPSDKPhase : NSObject
+ (NSString * _Nonnull)sdkInitPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)skadnRegisterPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)waterfallPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)videoSchedulePhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)neloPhaseWith:(GFPPhaseType)aType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK14GFPServerError")
@interface GFPServerError : NSObject
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSString * _Nullable debug;
@property (nonatomic, readonly, copy) NSString * _Nullable level;
- (nullable instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK22GFPServerErrorResponse")
@interface GFPServerErrorResponse : NSObject
@property (nonatomic, readonly, strong) GFPServerError * _Nonnull error;
- (nullable instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull serverErrorDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK18GFPSpannableOption")
@interface GFPSpannableOption : NSObject
/// 강조 Text 시작 위치 - 시작 Position은 1입니다.
@property (nonatomic, readonly) NSInteger startPos;
/// 강조 Text 끝 위치
@property (nonatomic, readonly) NSInteger endPos;
/// 볼드 여부
@property (nonatomic, readonly) BOOL isBold;
/// 변경 Text Color
@property (nonatomic, readonly, strong) UIColor * _Nullable textColor;
- (nonnull instancetype)initWithTextColor:(UIColor * _Nullable)textColor startPos:(NSInteger)startPos endPos:(NSInteger)endPos isBold:(BOOL)isBold OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK23GFPStringUtilsExtension")
@interface GFPStringUtilsExtension : NSObject
+ (NSString * _Nonnull)createTransactionId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GFPTemplateDefaultNativeBannerView")
@interface GFPTemplateDefaultNativeBannerView : UIView
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;

@interface GFPTemplateDefaultNativeBannerView (SWIFT_EXTENSION(GFPSDK)) <GFPNativeTemplateViewProtocol>
- (UIImageView * _Nullable)iconContainerView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)titleAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)advertiseAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)bodyAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)ctaAssetView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)adChoicesContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)serviceAdBadgeContainerView SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)createView SWIFT_WARN_UNUSED_RESULT;
- (void)bindWith:(id <GFPNativeAssetProtocol> _Nullable)asset;
- (void)changeStyleWith:(BOOL)isDarkMode;
- (CGFloat)estimateHeight SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("GFPTemplateDefaultNativeView")
@interface GFPTemplateDefaultNativeView : UIView
@property (nonatomic) CGFloat mediaViewMaxHeight;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface GFPTemplateDefaultNativeView (SWIFT_EXTENSION(GFPSDK)) <GFPUserInterestDelegate>
- (void)ad:(NSObject * _Null_unspecified)ad didChangeUserInterest:(BOOL)userInterest;
@end


@interface GFPTemplateDefaultNativeView (SWIFT_EXTENSION(GFPSDK)) <GFPNativeTemplateViewProtocol>
- (GFPMediaView * _Nullable)mediaContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIImageView * _Nullable)iconContainerView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)titleAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)advertiseAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)bodyAssetView SWIFT_WARN_UNUSED_RESULT;
- (UILabel * _Nullable)ctaAssetView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)adChoicesContainerView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)serviceAdBadgeContainerView SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)createView SWIFT_WARN_UNUSED_RESULT;
- (void)bindWith:(id <GFPNativeAssetProtocol> _Nullable)asset;
- (void)changeStyleWith:(BOOL)isDarkMode;
- (CGFloat)estimateHeight SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6GFPSDK22GFPTextAdViewAttribute")
@interface GFPTextAdViewAttribute : NSObject
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable verticalBarColor;
@property (nonatomic, strong) UIImage * _Nullable closeIcon;
@property (nonatomic, strong) UIImage * _Nullable moreIcon;
@property (nonatomic, strong) UIView * _Nullable containerView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithContainer:(UIView * _Nullable)container OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC6GFPSDK20GFPURLUtilsExtension")
@interface GFPURLUtilsExtension : NSObject
+ (void)sendGFPEventToUrl:(NSString * _Nonnull)urlString logId:(NSUUID * _Nonnull)logId;
+ (void)openURLWith:(NSString * _Nonnull)aURL completion:(void (^ _Nullable)(BOOL))completion;
+ (NSURLRequest * _Nonnull)defaultRequestWith:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GFPUADeviceInfo;

SWIFT_CLASS("_TtC6GFPSDK12GFPUserAgent")
@interface GFPUserAgent : NSObject
@property (nonatomic) BOOL useDefaultUA;
@property (nonatomic, copy) NSString * _Nullable updateUA;
@property (nonatomic, readonly, copy) NSString * _Nonnull wkwebViewUA;
- (nonnull instancetype)initWith:(GFPUADeviceInfo * _Nonnull)deviceInfo OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithExternalUserAgent:(NSString * _Nonnull)externalUserAgent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP6GFPSDK49GFPVideoAdAdditionalViewDataAccessibilityProvider_")
@protocol GFPVideoAdAdditionalViewDataAccessibilityProvider
- (UIView * _Nullable)additionalAdAccessibilityView SWIFT_WARN_UNUSED_RESULT;
@end


/// <ul>
///   <li>
///     Schedule Load 이후 비디오 광고 요청에 필요한 별도 Param 생성.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC6GFPSDK15GFPVideoAdParam")
@interface GFPVideoAdParam : NSObject <NSCopying>
@property (nonatomic, readonly, copy) NSString * _Nonnull scheduleID;
@property (nonatomic, readonly, copy) NSString * _Nonnull requestID;
@property (nonatomic, readonly) float contentLength;
@property (nonatomic, readonly) NSInteger remindRequest;
@property (nonatomic) NSInteger startDelay;
@property (nonatomic) BOOL hasRemind;
- (nonnull instancetype)initWithScheduleID:(NSString * _Nonnull)aScheduleID requestID:(NSString * _Nonnull)requestID contentLength:(float)contentLength OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum GFPVideoBackgroundActionType : NSInteger;

SWIFT_CLASS("_TtC6GFPSDK23GFPVideoAdPlayerSetting")
@interface GFPVideoAdPlayerSetting : NSObject
/// 광고 재생 도중 Background 진입 시 동작 option 처리. (Default는 Pause)
@property (nonatomic) enum GFPVideoBackgroundActionType backAction;
/// 광고 재생 도중 Audio output 관련 동작 정리. (Optional, Default는 AVPlayer 기본 동작)
@property (nonatomic) GFPVideoAudioSettingType audioSetting;
/// externalPlayBack 비활성화 여부 (Default는 false)
/// <ul>
///   <li>
///     true로 설정시 광고 플레이어의 allowExternalPlayBack이 false로 설정됩니다.
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL disableExternalPlayback;
- (nonnull instancetype)initWithAction:(enum GFPVideoBackgroundActionType)aAction audioSetting:(GFPVideoAudioSettingType)aType disableExternalPlayback:(BOOL)disableExternalPlayBack OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithAction:(enum GFPVideoBackgroundActionType)aAction audioSetting:(GFPVideoAudioSettingType)aType;
- (nonnull instancetype)initWithAction:(enum GFPVideoBackgroundActionType)aAction;
- (nonnull instancetype)initWithAudioSetting:(GFPVideoAudioSettingType)aType;
- (nonnull instancetype)initWithDisableExternalPlayback:(BOOL)disableExternalPlayback;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6GFPSDK26GFPVideoAdRenderingSetting")
@interface GFPVideoAdRenderingSetting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger GFPVideoAdRenderingSettingAutodetectBitrate;)
+ (NSInteger)GFPVideoAdRenderingSettingAutodetectBitrate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval GFPVideoAdRenderingSettingDefaultStartTimeout;)
+ (NSTimeInterval)GFPVideoAdRenderingSettingDefaultStartTimeout SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSTimeInterval GFPVideoAdRenderingSettingDefaultBufferingTimeout;)
+ (NSTimeInterval)GFPVideoAdRenderingSettingDefaultBufferingTimeout SWIFT_WARN_UNUSED_RESULT;
/// 광고영상의 최대 bitrate (kbit/sec)
/// 입력값 보다 낮은 bitrate 광고영상 중 가장 높은 bitrate 영샹이 채택되며,
/// 입력값 보다 낮은 bitrate 영상이 없는 경우 가장 가까운 bitrate 영샹이 재생됩니다.
/// 기본값(GFPVideoAdRenderingSettingAutodetectBitrate)인 경우, WIFI 사용중에는 최대, Cellular 환경에서는 최소 bitrate 영샹이 재생됩니다.
@property (nonatomic) NSInteger bitrateKbps;
/// 광고영상의 MIME type 목록
/// 기본값(=nil or Empty)은, AVPlayer 에서 지원하는 모든 타입이 허용됩니다.
/// 명시한 MIME type에 해당하는 영상 URL이 서버로부터 제공되지 않으면, 광고로드시 Error 가 송출됩니다.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimeTypes;
/// 광고 시작요청 이후 실제 시작 시점까지 타임아웃 (기본값은 -1 이며, 이 경우 타임아웃 8초가 적용 됩니다.)
@property (nonatomic) NSTimeInterval startTimeoutInterval;
/// 재생도중 버퍼링이 발생한 경우, 설정된 시간을 초과하면 타임아웃 에러가 발생합니다. (기본값은 -1 이며, 이 경우 타임아웃이 적용되지 않습니다.)
@property (nonatomic) NSTimeInterval bufferingTimeoutInterval;
/// 광고 UI 컴포넌트를 그릴 때 기준을 설정합니다. (기본값은 false)
/// false: GFPVideoAdScheduleManager.videoView 혹은 GFPVideoAdmanager.videoView 의 너비에 따라 컴포넌트를 그림.
/// true: 광고 영상의 실제 width 에 따라 컴포넌트를 그림.
@property (nonatomic) BOOL isPreferContentWidthUI;
/// 인스트림의 SKIP 버튼 위의 Additional Info를 표기할 뷰입니다.
/// adCount 등에 사용됩니다.
@property (nonatomic, strong) UIView <GFPVideoAdAdditionalViewDataAccessibilityProvider> * _Nullable adAdditionalInfoView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, GFPVideoBackgroundActionType, open) {
  GFPVideoBackgroundActionTypePlay = 0,
  GFPVideoBackgroundActionTypePause = 1,
};

enum GFPVideoDisplayType : NSInteger;

SWIFT_CLASS("_TtC6GFPSDK19GFPVideoDisplayMode")
@interface GFPVideoDisplayMode : NSObject
@property (nonatomic, readonly) enum GFPVideoDisplayType mode;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, weak) UIView * _Nullable customTopView;
@property (nonatomic, readonly) BOOL isCasting;
@property (nonatomic, readonly) BOOL isPIP;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
+ (GFPVideoDisplayMode * _Nonnull)normal SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)castingWith:(NSString * _Nullable)text SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)pip SWIFT_WARN_UNUSED_RESULT;
+ (GFPVideoDisplayMode * _Nonnull)pipWith:(UIView * _Nullable)customTopView SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

typedef SWIFT_ENUM(NSInteger, GFPVideoDisplayType, open) {
  GFPVideoDisplayTypeNormal = 0,
  GFPVideoDisplayTypeCasting = 1,
  GFPVideoDisplayTypePIP = 2,
};

/// GFP에서 지원하는 비디오광고 제공자 목록
typedef SWIFT_ENUM(NSInteger, GFPVideoProviderOption, open) {
  GFPVideoProviderOptionNone = 0,
  GFPVideoProviderOptionNDA = 1,
  GFPVideoProviderOptionIMA = 2,
  GFPVideoProviderOptionEnd = 3,
};


SWIFT_CLASS("_TtC6GFPSDK15GFPViewAnalysis")
@interface GFPViewAnalysis : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6GFPSDK18GFPWaterfallAdSize")
@interface GFPWaterfallAdSize : NSObject
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic, readonly) CGSize size;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC6GFPSDK20kGFPAdInterfaceStyle")
@interface kGFPAdInterfaceStyle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull changed;)
+ (NSString * _Nonnull)changed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK28kGFPInterstitialNotification")
@interface kGFPInterstitialNotification : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull resume;)
+ (NSString * _Nonnull)resume SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK24kGFPRewardedNotification")
@interface kGFPRewardedNotification : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull resume;)
+ (NSString * _Nonnull)resume SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK21kGFPTemplateVisualKey")
@interface kGFPTemplateVisualKey : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultVisualKey;)
+ (NSString * _Nonnull)defaultVisualKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull shoppingLabel;)
+ (NSString * _Nonnull)shoppingLabel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull smartChannelCarousel;)
+ (NSString * _Nonnull)smartChannelCarousel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull shoppingNda;)
+ (NSString * _Nonnull)shoppingNda SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6GFPSDK22kGFPVideoGlobalOptions")
@interface kGFPVideoGlobalOptions : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull disableAutoPlay_changed;)
+ (NSString * _Nonnull)disableAutoPlay_changed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull globalPlayPolicy_changed;)
+ (NSString * _Nonnull)globalPlayPolicy_changed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
